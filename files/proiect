# Final project for ITF Manual Testing Course

The scope of the final project for ITF Manual Testing Course is to use all gained knowledge throught the course and apply them in practice, using a live application. 

Application under test: https://demo.opencart.com/

API Documentation: http://docs.opencart.com/en-gb/store-front/

**The final project will be split into 2 sections: [Testing section](https://github.com/mvenera/manual_testing_project/README.md#1-testing-section) and [SQL section](https://github.com/mvenera/manual_testing_project/README.md#2-sql-section).**

Tools used: JIRA, Zephyr Squad, Postman, MySQL Workbench.

# Functional specifications

The below Epic was created in JIRA and describes the functional specifications of the Shopping Cart and Checkout modules within the Brosing the Front Store Documentation, on which the final project is based.

As a new customer I want to be able to place an order to make an online shopping.
![image](https://github.com/mvenera/manual_testing_project/blob/main/files/images/epic.png)

Exclusions:
From the Shopping cart page:
* Estimate Shipping & Taxes
* Use Coupon Code
* Use Gift Certificate

From the Checkout page:
* Login page

# 1 Testing section

## 1.1 Test Planning

The Test Plan is designed to describe all details of testing for placing an order in the OpenCart application. 

The plan identifies the items to be tested, the features to be tested, the types of testing to be performed, the personnel responsible for testing, the resources and schedule required to complete testing, and the risks associated with the plan.

#### 1.1.1 Roles assigned to the project and persons allocated

Review UI documentation: Venera Nicolici
QA tester: Venera Nicolici

#### 1.1.2 Entry criteria defined

* functional specifications are defined
* roles needed for the project are allocated
* initial project risks were detected and mitigated

#### 1.1.3 Exit criteria defined


* maximum 15 unresolved bugs with high priority
* all tests have been executed
* all resolved bugs have been re-tested and approved by the QA team
* deadline was reached
* no detected major risk remained un-mitigated
* exploratory regression testing must be performed on the application

#### 1.1.4 Test scope

* __Tests in scope:__ All the feature defined in software requirement specs (see Exclusions) need to be tested: functional testing, GUI testing 
* __Tests not in scope:__ performance testing, compatibility testing with multiple browsers, security testing

#### 1.1.5 Risks detected

* Project risks: not sufficient QA testers in QA team, the development team envolved in another high priority project, short deadline of Zephyr Squad trial, low quality of UI documentation
* Product risks: the inability of the application to fulfill the requirements, low quality of non-functional parameters: usability 

#### 1.1.6 Evaluating entry criteria

As a result of the revision of the documentation in the static analysis phase, version v2 / 22.02.2023 resulted: [Browsing the Front Store - Placing Orders](https://github.com/mvenera/manual_testing_project/blob/main/Browsing%20the%20Front%20Store%20-%20Placing%20Orders.docx)
The entry criterias defined in the Test Planning phase have been achieved and the test process can continue. 

## 1.2 Test Monitoring and Control

It will be done by generating periodic reports that reflect the current status of the test.

## 1.3 Test Analysis

The testing process will be executed based on the above requirements for the Dependents module. The following test conditions were found:
 * Enter test conditions here

## 1.4 Test Design

Functional test cases were created in Zephyr Squad. Based on the analysis of the specifications, the test design techniques used for generating test cases 
are:

**Test cases:**
-> enter here test cases or at least the titles


The test cases with steps can be viewed here: [test_cases.pdf]()

## 1.5 Test Implementation

The following elements are needed to be ready before the test execution phase begins:

* enter here what needs to be ready for the test execution to begin

## 1.6 Test Execution

* Test cases are executed on the created test Cycle summary: [cycle_summary_execution.pdf]()
* Bugs have been created based on the failed tests. The complete bug reports can be found here: [created_bugs.pdf]()
    *  enter here bug titles


## 1.7 Test Completion

* Exit criteria was evaluated and passed
* The traceability matrix was generated and can be found here: [Traceability_matrix.csv]()
* Test execution chart was generated, the final report shows.... -> describe the final report

-> enter here test execution report/chart

# 2 SQL section


